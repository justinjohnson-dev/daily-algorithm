/*
This question is asked by Google. You are given two strings, s and t which only consist of lowercase letters. t is generated by shuffling the letters in s as well as potentially adding an additional random character. Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘.
Note: You may assume that at most one additional character can be added to t.
*/

// time complexity of O(n * n) -> O(n) where n is the size of the input strings
// space complexity of O(n)

function spotTheDifference(s, t) {
  const hashTable = {};

  for (const char of s) {
    hashTable[char] = !hashTable[char]
      ? (hashTable[char] = 1)
      : (hashTable[char] += 1);
  }

  for (const char of t) {
    if (hashTable[char] && hashTable[char] !== 0) {
      hashTable[char] - +1;
    } else {
      return char;
    }
  }

  return '';
}

console.log(spotTheDifference('foobar', 'barfoot')); // return 't'
console.log(spotTheDifference('ide', 'idea')); // return 'a'
console.log(spotTheDifference('coding', 'ingcod')); // return ''
